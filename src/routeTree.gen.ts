/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as PageImport } from './routes/$page'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthPage2Import } from './routes/_auth/page2'
import { Route as AuthPageImport } from './routes/_auth/page'
import { Route as AuthIconImport } from './routes/_auth/icon'
import { Route as AuthFormImport } from './routes/_auth/form'
import { Route as AuthNestingImport } from './routes/_auth/_nesting'
import { Route as AuthTableIndexImport } from './routes/_auth/table/index'
import { Route as AuthJotaiIndexImport } from './routes/_auth/jotai/index'
import { Route as AuthAboutIndexImport } from './routes/_auth/about/index'
import { Route as AuthUserPagerImport } from './routes/_auth/user/pager'
import { Route as AuthUserIdImport } from './routes/_auth/user/$id'
import { Route as AuthAboutIdImport } from './routes/_auth/about/$id'
import { Route as AuthNestingLayoutTestImport } from './routes/_auth/_nesting/layout-test'
import { Route as AuthNestingLayoutImport } from './routes/_auth/_nesting/_layout'
import { Route as AuthgroupGroup3Import } from './routes/_auth/(group)/group3'
import { Route as AuthgroupGroup2Import } from './routes/_auth/(group)/group2'
import { Route as AuthAboutNameIndexImport } from './routes/_auth/about/name/index'
import { Route as AuthAboutValueIndexImport } from './routes/_auth/about/$value/index'
import { Route as AuthAboutNameNameImport } from './routes/_auth/about/name/$name'
import { Route as AuthAboutValueCreateImport } from './routes/_auth/about/$value/create'
import { Route as AuthNestingLayoutTest2Import } from './routes/_auth/_nesting/_layout/test2'
import { Route as AuthNestingLayoutTest3IdImport } from './routes/_auth/_nesting/_layout/test3.$id'

// Create Virtual Routes

const AuthUserLazyImport = createFileRoute('/_auth/user')()
const AuthStoreLazyImport = createFileRoute('/_auth/store')()
const AuthUserIndexLazyImport = createFileRoute('/_auth/user/')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const PageRoute = PageImport.update({
  id: '/$page',
  path: '/$page',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUserLazyRoute = AuthUserLazyImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/user.lazy').then((d) => d.Route))

const AuthStoreLazyRoute = AuthStoreLazyImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/store.lazy').then((d) => d.Route))

const AuthPage2Route = AuthPage2Import.update({
  id: '/page2',
  path: '/page2',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPageRoute = AuthPageImport.update({
  id: '/page',
  path: '/page',
  getParentRoute: () => AuthRoute,
} as any)

const AuthIconRoute = AuthIconImport.update({
  id: '/icon',
  path: '/icon',
  getParentRoute: () => AuthRoute,
} as any)

const AuthFormRoute = AuthFormImport.update({
  id: '/form',
  path: '/form',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNestingRoute = AuthNestingImport.update({
  id: '/_nesting',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUserIndexLazyRoute = AuthUserIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthUserLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/user/index.lazy').then((d) => d.Route),
)

const AuthTableIndexRoute = AuthTableIndexImport.update({
  id: '/table/',
  path: '/table/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthJotaiIndexRoute = AuthJotaiIndexImport.update({
  id: '/jotai/',
  path: '/jotai/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAboutIndexRoute = AuthAboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUserPagerRoute = AuthUserPagerImport.update({
  id: '/pager',
  path: '/pager',
  getParentRoute: () => AuthUserLazyRoute,
} as any)

const AuthUserIdRoute = AuthUserIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AuthUserLazyRoute,
} as any)

const AuthAboutIdRoute = AuthAboutIdImport.update({
  id: '/about/$id',
  path: '/about/$id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNestingLayoutTestRoute = AuthNestingLayoutTestImport.update({
  id: '/layout-test',
  path: '/layout-test',
  getParentRoute: () => AuthNestingRoute,
} as any)

const AuthNestingLayoutRoute = AuthNestingLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthNestingRoute,
} as any)

const AuthgroupGroup3Route = AuthgroupGroup3Import.update({
  id: '/(group)/group3',
  path: '/group3',
  getParentRoute: () => AuthRoute,
} as any)

const AuthgroupGroup2Route = AuthgroupGroup2Import.update({
  id: '/(group)/group2',
  path: '/group2',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAboutNameIndexRoute = AuthAboutNameIndexImport.update({
  id: '/about/name/',
  path: '/about/name/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAboutValueIndexRoute = AuthAboutValueIndexImport.update({
  id: '/about/$value/',
  path: '/about/$value/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAboutNameNameRoute = AuthAboutNameNameImport.update({
  id: '/about/name/$name',
  path: '/about/name/$name',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAboutValueCreateRoute = AuthAboutValueCreateImport.update({
  id: '/about/$value/create',
  path: '/about/$value/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNestingLayoutTest2Route = AuthNestingLayoutTest2Import.update({
  id: '/test2',
  path: '/test2',
  getParentRoute: () => AuthNestingLayoutRoute,
} as any)

const AuthNestingLayoutTest3IdRoute = AuthNestingLayoutTest3IdImport.update({
  id: '/test3/$id',
  path: '/test3/$id',
  getParentRoute: () => AuthNestingLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$page': {
      id: '/$page'
      path: '/$page'
      fullPath: '/$page'
      preLoaderRoute: typeof PageImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_nesting': {
      id: '/_auth/_nesting'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthNestingImport
      parentRoute: typeof AuthImport
    }
    '/_auth/form': {
      id: '/_auth/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof AuthFormImport
      parentRoute: typeof AuthImport
    }
    '/_auth/icon': {
      id: '/_auth/icon'
      path: '/icon'
      fullPath: '/icon'
      preLoaderRoute: typeof AuthIconImport
      parentRoute: typeof AuthImport
    }
    '/_auth/page': {
      id: '/_auth/page'
      path: '/page'
      fullPath: '/page'
      preLoaderRoute: typeof AuthPageImport
      parentRoute: typeof AuthImport
    }
    '/_auth/page2': {
      id: '/_auth/page2'
      path: '/page2'
      fullPath: '/page2'
      preLoaderRoute: typeof AuthPage2Import
      parentRoute: typeof AuthImport
    }
    '/_auth/store': {
      id: '/_auth/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof AuthStoreLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/user': {
      id: '/_auth/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AuthUserLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(group)/group2': {
      id: '/_auth/(group)/group2'
      path: '/group2'
      fullPath: '/group2'
      preLoaderRoute: typeof AuthgroupGroup2Import
      parentRoute: typeof AuthImport
    }
    '/_auth/(group)/group3': {
      id: '/_auth/(group)/group3'
      path: '/group3'
      fullPath: '/group3'
      preLoaderRoute: typeof AuthgroupGroup3Import
      parentRoute: typeof AuthImport
    }
    '/_auth/_nesting/_layout': {
      id: '/_auth/_nesting/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthNestingLayoutImport
      parentRoute: typeof AuthNestingImport
    }
    '/_auth/_nesting/layout-test': {
      id: '/_auth/_nesting/layout-test'
      path: '/layout-test'
      fullPath: '/layout-test'
      preLoaderRoute: typeof AuthNestingLayoutTestImport
      parentRoute: typeof AuthNestingImport
    }
    '/_auth/about/$id': {
      id: '/_auth/about/$id'
      path: '/about/$id'
      fullPath: '/about/$id'
      preLoaderRoute: typeof AuthAboutIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/user/$id': {
      id: '/_auth/user/$id'
      path: '/$id'
      fullPath: '/user/$id'
      preLoaderRoute: typeof AuthUserIdImport
      parentRoute: typeof AuthUserLazyImport
    }
    '/_auth/user/pager': {
      id: '/_auth/user/pager'
      path: '/pager'
      fullPath: '/user/pager'
      preLoaderRoute: typeof AuthUserPagerImport
      parentRoute: typeof AuthUserLazyImport
    }
    '/_auth/about/': {
      id: '/_auth/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/jotai/': {
      id: '/_auth/jotai/'
      path: '/jotai'
      fullPath: '/jotai'
      preLoaderRoute: typeof AuthJotaiIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/table/': {
      id: '/_auth/table/'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof AuthTableIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/user/': {
      id: '/_auth/user/'
      path: '/'
      fullPath: '/user/'
      preLoaderRoute: typeof AuthUserIndexLazyImport
      parentRoute: typeof AuthUserLazyImport
    }
    '/_auth/_nesting/_layout/test2': {
      id: '/_auth/_nesting/_layout/test2'
      path: '/test2'
      fullPath: '/test2'
      preLoaderRoute: typeof AuthNestingLayoutTest2Import
      parentRoute: typeof AuthNestingLayoutImport
    }
    '/_auth/about/$value/create': {
      id: '/_auth/about/$value/create'
      path: '/about/$value/create'
      fullPath: '/about/$value/create'
      preLoaderRoute: typeof AuthAboutValueCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/about/name/$name': {
      id: '/_auth/about/name/$name'
      path: '/about/name/$name'
      fullPath: '/about/name/$name'
      preLoaderRoute: typeof AuthAboutNameNameImport
      parentRoute: typeof AuthImport
    }
    '/_auth/about/$value/': {
      id: '/_auth/about/$value/'
      path: '/about/$value'
      fullPath: '/about/$value'
      preLoaderRoute: typeof AuthAboutValueIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/about/name/': {
      id: '/_auth/about/name/'
      path: '/about/name'
      fullPath: '/about/name'
      preLoaderRoute: typeof AuthAboutNameIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/_nesting/_layout/test3/$id': {
      id: '/_auth/_nesting/_layout/test3/$id'
      path: '/test3/$id'
      fullPath: '/test3/$id'
      preLoaderRoute: typeof AuthNestingLayoutTest3IdImport
      parentRoute: typeof AuthNestingLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthNestingLayoutRouteChildren {
  AuthNestingLayoutTest2Route: typeof AuthNestingLayoutTest2Route
  AuthNestingLayoutTest3IdRoute: typeof AuthNestingLayoutTest3IdRoute
}

const AuthNestingLayoutRouteChildren: AuthNestingLayoutRouteChildren = {
  AuthNestingLayoutTest2Route: AuthNestingLayoutTest2Route,
  AuthNestingLayoutTest3IdRoute: AuthNestingLayoutTest3IdRoute,
}

const AuthNestingLayoutRouteWithChildren =
  AuthNestingLayoutRoute._addFileChildren(AuthNestingLayoutRouteChildren)

interface AuthNestingRouteChildren {
  AuthNestingLayoutRoute: typeof AuthNestingLayoutRouteWithChildren
  AuthNestingLayoutTestRoute: typeof AuthNestingLayoutTestRoute
}

const AuthNestingRouteChildren: AuthNestingRouteChildren = {
  AuthNestingLayoutRoute: AuthNestingLayoutRouteWithChildren,
  AuthNestingLayoutTestRoute: AuthNestingLayoutTestRoute,
}

const AuthNestingRouteWithChildren = AuthNestingRoute._addFileChildren(
  AuthNestingRouteChildren,
)

interface AuthUserLazyRouteChildren {
  AuthUserIdRoute: typeof AuthUserIdRoute
  AuthUserPagerRoute: typeof AuthUserPagerRoute
  AuthUserIndexLazyRoute: typeof AuthUserIndexLazyRoute
}

const AuthUserLazyRouteChildren: AuthUserLazyRouteChildren = {
  AuthUserIdRoute: AuthUserIdRoute,
  AuthUserPagerRoute: AuthUserPagerRoute,
  AuthUserIndexLazyRoute: AuthUserIndexLazyRoute,
}

const AuthUserLazyRouteWithChildren = AuthUserLazyRoute._addFileChildren(
  AuthUserLazyRouteChildren,
)

interface AuthRouteChildren {
  AuthNestingRoute: typeof AuthNestingRouteWithChildren
  AuthFormRoute: typeof AuthFormRoute
  AuthIconRoute: typeof AuthIconRoute
  AuthPageRoute: typeof AuthPageRoute
  AuthPage2Route: typeof AuthPage2Route
  AuthStoreLazyRoute: typeof AuthStoreLazyRoute
  AuthUserLazyRoute: typeof AuthUserLazyRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
  AuthgroupGroup2Route: typeof AuthgroupGroup2Route
  AuthgroupGroup3Route: typeof AuthgroupGroup3Route
  AuthAboutIdRoute: typeof AuthAboutIdRoute
  AuthAboutIndexRoute: typeof AuthAboutIndexRoute
  AuthJotaiIndexRoute: typeof AuthJotaiIndexRoute
  AuthTableIndexRoute: typeof AuthTableIndexRoute
  AuthAboutValueCreateRoute: typeof AuthAboutValueCreateRoute
  AuthAboutNameNameRoute: typeof AuthAboutNameNameRoute
  AuthAboutValueIndexRoute: typeof AuthAboutValueIndexRoute
  AuthAboutNameIndexRoute: typeof AuthAboutNameIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthNestingRoute: AuthNestingRouteWithChildren,
  AuthFormRoute: AuthFormRoute,
  AuthIconRoute: AuthIconRoute,
  AuthPageRoute: AuthPageRoute,
  AuthPage2Route: AuthPage2Route,
  AuthStoreLazyRoute: AuthStoreLazyRoute,
  AuthUserLazyRoute: AuthUserLazyRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
  AuthgroupGroup2Route: AuthgroupGroup2Route,
  AuthgroupGroup3Route: AuthgroupGroup3Route,
  AuthAboutIdRoute: AuthAboutIdRoute,
  AuthAboutIndexRoute: AuthAboutIndexRoute,
  AuthJotaiIndexRoute: AuthJotaiIndexRoute,
  AuthTableIndexRoute: AuthTableIndexRoute,
  AuthAboutValueCreateRoute: AuthAboutValueCreateRoute,
  AuthAboutNameNameRoute: AuthAboutNameNameRoute,
  AuthAboutValueIndexRoute: AuthAboutValueIndexRoute,
  AuthAboutNameIndexRoute: AuthAboutNameIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/$page': typeof PageRoute
  '': typeof AuthNestingLayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/form': typeof AuthFormRoute
  '/icon': typeof AuthIconRoute
  '/page': typeof AuthPageRoute
  '/page2': typeof AuthPage2Route
  '/store': typeof AuthStoreLazyRoute
  '/user': typeof AuthUserLazyRouteWithChildren
  '/': typeof AuthIndexRoute
  '/group2': typeof AuthgroupGroup2Route
  '/group3': typeof AuthgroupGroup3Route
  '/layout-test': typeof AuthNestingLayoutTestRoute
  '/about/$id': typeof AuthAboutIdRoute
  '/user/$id': typeof AuthUserIdRoute
  '/user/pager': typeof AuthUserPagerRoute
  '/about': typeof AuthAboutIndexRoute
  '/jotai': typeof AuthJotaiIndexRoute
  '/table': typeof AuthTableIndexRoute
  '/user/': typeof AuthUserIndexLazyRoute
  '/test2': typeof AuthNestingLayoutTest2Route
  '/about/$value/create': typeof AuthAboutValueCreateRoute
  '/about/name/$name': typeof AuthAboutNameNameRoute
  '/about/$value': typeof AuthAboutValueIndexRoute
  '/about/name': typeof AuthAboutNameIndexRoute
  '/test3/$id': typeof AuthNestingLayoutTest3IdRoute
}

export interface FileRoutesByTo {
  '/$page': typeof PageRoute
  '/login': typeof LoginRoute
  '': typeof AuthNestingLayoutRouteWithChildren
  '/form': typeof AuthFormRoute
  '/icon': typeof AuthIconRoute
  '/page': typeof AuthPageRoute
  '/page2': typeof AuthPage2Route
  '/store': typeof AuthStoreLazyRoute
  '/': typeof AuthIndexRoute
  '/group2': typeof AuthgroupGroup2Route
  '/group3': typeof AuthgroupGroup3Route
  '/layout-test': typeof AuthNestingLayoutTestRoute
  '/about/$id': typeof AuthAboutIdRoute
  '/user/$id': typeof AuthUserIdRoute
  '/user/pager': typeof AuthUserPagerRoute
  '/about': typeof AuthAboutIndexRoute
  '/jotai': typeof AuthJotaiIndexRoute
  '/table': typeof AuthTableIndexRoute
  '/user': typeof AuthUserIndexLazyRoute
  '/test2': typeof AuthNestingLayoutTest2Route
  '/about/$value/create': typeof AuthAboutValueCreateRoute
  '/about/name/$name': typeof AuthAboutNameNameRoute
  '/about/$value': typeof AuthAboutValueIndexRoute
  '/about/name': typeof AuthAboutNameIndexRoute
  '/test3/$id': typeof AuthNestingLayoutTest3IdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$page': typeof PageRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/_nesting': typeof AuthNestingRouteWithChildren
  '/_auth/form': typeof AuthFormRoute
  '/_auth/icon': typeof AuthIconRoute
  '/_auth/page': typeof AuthPageRoute
  '/_auth/page2': typeof AuthPage2Route
  '/_auth/store': typeof AuthStoreLazyRoute
  '/_auth/user': typeof AuthUserLazyRouteWithChildren
  '/_auth/': typeof AuthIndexRoute
  '/_auth/(group)/group2': typeof AuthgroupGroup2Route
  '/_auth/(group)/group3': typeof AuthgroupGroup3Route
  '/_auth/_nesting/_layout': typeof AuthNestingLayoutRouteWithChildren
  '/_auth/_nesting/layout-test': typeof AuthNestingLayoutTestRoute
  '/_auth/about/$id': typeof AuthAboutIdRoute
  '/_auth/user/$id': typeof AuthUserIdRoute
  '/_auth/user/pager': typeof AuthUserPagerRoute
  '/_auth/about/': typeof AuthAboutIndexRoute
  '/_auth/jotai/': typeof AuthJotaiIndexRoute
  '/_auth/table/': typeof AuthTableIndexRoute
  '/_auth/user/': typeof AuthUserIndexLazyRoute
  '/_auth/_nesting/_layout/test2': typeof AuthNestingLayoutTest2Route
  '/_auth/about/$value/create': typeof AuthAboutValueCreateRoute
  '/_auth/about/name/$name': typeof AuthAboutNameNameRoute
  '/_auth/about/$value/': typeof AuthAboutValueIndexRoute
  '/_auth/about/name/': typeof AuthAboutNameIndexRoute
  '/_auth/_nesting/_layout/test3/$id': typeof AuthNestingLayoutTest3IdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$page'
    | ''
    | '/login'
    | '/form'
    | '/icon'
    | '/page'
    | '/page2'
    | '/store'
    | '/user'
    | '/'
    | '/group2'
    | '/group3'
    | '/layout-test'
    | '/about/$id'
    | '/user/$id'
    | '/user/pager'
    | '/about'
    | '/jotai'
    | '/table'
    | '/user/'
    | '/test2'
    | '/about/$value/create'
    | '/about/name/$name'
    | '/about/$value'
    | '/about/name'
    | '/test3/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$page'
    | '/login'
    | ''
    | '/form'
    | '/icon'
    | '/page'
    | '/page2'
    | '/store'
    | '/'
    | '/group2'
    | '/group3'
    | '/layout-test'
    | '/about/$id'
    | '/user/$id'
    | '/user/pager'
    | '/about'
    | '/jotai'
    | '/table'
    | '/user'
    | '/test2'
    | '/about/$value/create'
    | '/about/name/$name'
    | '/about/$value'
    | '/about/name'
    | '/test3/$id'
  id:
    | '__root__'
    | '/$page'
    | '/_auth'
    | '/login'
    | '/_auth/_nesting'
    | '/_auth/form'
    | '/_auth/icon'
    | '/_auth/page'
    | '/_auth/page2'
    | '/_auth/store'
    | '/_auth/user'
    | '/_auth/'
    | '/_auth/(group)/group2'
    | '/_auth/(group)/group3'
    | '/_auth/_nesting/_layout'
    | '/_auth/_nesting/layout-test'
    | '/_auth/about/$id'
    | '/_auth/user/$id'
    | '/_auth/user/pager'
    | '/_auth/about/'
    | '/_auth/jotai/'
    | '/_auth/table/'
    | '/_auth/user/'
    | '/_auth/_nesting/_layout/test2'
    | '/_auth/about/$value/create'
    | '/_auth/about/name/$name'
    | '/_auth/about/$value/'
    | '/_auth/about/name/'
    | '/_auth/_nesting/_layout/test3/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PageRoute: typeof PageRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  PageRoute: PageRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$page",
        "/_auth",
        "/login"
      ]
    },
    "/$page": {
      "filePath": "$page.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/_nesting",
        "/_auth/form",
        "/_auth/icon",
        "/_auth/page",
        "/_auth/page2",
        "/_auth/store",
        "/_auth/user",
        "/_auth/",
        "/_auth/(group)/group2",
        "/_auth/(group)/group3",
        "/_auth/about/$id",
        "/_auth/about/",
        "/_auth/jotai/",
        "/_auth/table/",
        "/_auth/about/$value/create",
        "/_auth/about/name/$name",
        "/_auth/about/$value/",
        "/_auth/about/name/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/_nesting": {
      "filePath": "_auth/_nesting.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/_nesting/_layout",
        "/_auth/_nesting/layout-test"
      ]
    },
    "/_auth/form": {
      "filePath": "_auth/form.tsx",
      "parent": "/_auth"
    },
    "/_auth/icon": {
      "filePath": "_auth/icon.tsx",
      "parent": "/_auth"
    },
    "/_auth/page": {
      "filePath": "_auth/page.tsx",
      "parent": "/_auth"
    },
    "/_auth/page2": {
      "filePath": "_auth/page2.tsx",
      "parent": "/_auth"
    },
    "/_auth/store": {
      "filePath": "_auth/store.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/user": {
      "filePath": "_auth/user.lazy.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/user/$id",
        "/_auth/user/pager",
        "/_auth/user/"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/(group)/group2": {
      "filePath": "_auth/(group)/group2.tsx",
      "parent": "/_auth"
    },
    "/_auth/(group)/group3": {
      "filePath": "_auth/(group)/group3.tsx",
      "parent": "/_auth"
    },
    "/_auth/_nesting/_layout": {
      "filePath": "_auth/_nesting/_layout.tsx",
      "parent": "/_auth/_nesting",
      "children": [
        "/_auth/_nesting/_layout/test2",
        "/_auth/_nesting/_layout/test3/$id"
      ]
    },
    "/_auth/_nesting/layout-test": {
      "filePath": "_auth/_nesting/layout-test.tsx",
      "parent": "/_auth/_nesting"
    },
    "/_auth/about/$id": {
      "filePath": "_auth/about/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/user/$id": {
      "filePath": "_auth/user/$id.tsx",
      "parent": "/_auth/user"
    },
    "/_auth/user/pager": {
      "filePath": "_auth/user/pager.tsx",
      "parent": "/_auth/user"
    },
    "/_auth/about/": {
      "filePath": "_auth/about/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/jotai/": {
      "filePath": "_auth/jotai/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/table/": {
      "filePath": "_auth/table/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/user/": {
      "filePath": "_auth/user/index.lazy.tsx",
      "parent": "/_auth/user"
    },
    "/_auth/_nesting/_layout/test2": {
      "filePath": "_auth/_nesting/_layout/test2.tsx",
      "parent": "/_auth/_nesting/_layout"
    },
    "/_auth/about/$value/create": {
      "filePath": "_auth/about/$value/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/about/name/$name": {
      "filePath": "_auth/about/name/$name.tsx",
      "parent": "/_auth"
    },
    "/_auth/about/$value/": {
      "filePath": "_auth/about/$value/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/about/name/": {
      "filePath": "_auth/about/name/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/_nesting/_layout/test3/$id": {
      "filePath": "_auth/_nesting/_layout/test3.$id.tsx",
      "parent": "/_auth/_nesting/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
